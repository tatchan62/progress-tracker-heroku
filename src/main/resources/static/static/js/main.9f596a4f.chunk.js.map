{"version":3,"sources":["actions/topicActions.js","actions/types.js","components/Topic/TopicItem.js","components/Topic/CreateTopicButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityAction.js","components/Layout/Header.js","components/Topic/AddTopic.js","reducers/errorReducer.js","reducers/topicReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Topic/UpdateTopic.js","components/TopicBoard/Questions/Question.js","actions/backlogActions.js","components/TopicBoard/Backlog.js","components/TopicBoard/TopicBoard.js","components/TopicBoard/Questions/AddQuestion.js","components/TopicBoard/Questions/UpdateQuestion.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createTopic","topic","history","dispatch","a","axios","post","push","type","payload","response","data","TopicItem","onDeleteClick","id","props","deleteTopic","this","className","topicIdentifier","topicName","description","Link","to","onClick","bind","Component","connect","window","confirm","delete","CreateTopicButton","Fragment","Dashboard","getTopics","topics","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddTopic","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newTopic","classnames","placeholder","initialState","questions","question","booleanActionPayload","combineReducers","action","filter","backlog","topicSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateTopic","match","params","getTopic","updateTopic","disabled","Question","backlog_id","q_id","deleteQuestion","priorityString","priorityClass","priority","summary","note","class","Backlog","qs","questions_prop","todoItems","inProgressItems","doneItems","i","length","status","TopicBoard","getBacklog","BoardContent","topicNotFound","role","boardAlgorithm","AddQuestion","dueDate","newQuestion","addQuestion","UpdateQuestion","getQuestion","updateQuestion","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","userame","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_token","currentTime","Date","now","exp","App","exact","path","Switch","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f596a4f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_TOPICS, GET_TOPIC, DELETE_TOPIC } from \"./types\";\r\n\r\n// API Call\r\n//name = createTopic with topic and history variables\r\nexport const createTopic = (topic, history) => async (dispatch) => {\r\n  try {\r\n    // from post API(Controller Class)\r\n    await axios.post(\"/api/topic\", topic);\r\n    history.push(\"/dashboard\");\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      // reset errors. Stop from recurring display\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// proxy defined in package.json: http://localhost:8080!!!!!!!!!!\r\n\r\n// get all topics API Call\r\nexport const getTopics = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/topic/all\");\r\n  dispatch({\r\n    type: GET_TOPICS,\r\n    payload: res.data, // pass to payload at topicReducer.js\r\n  });\r\n};\r\n\r\n// API Call\r\n// history is for when we get errors, we need to redirect backt o dashboard\r\nexport const getTopic = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/topic/${id}`);\r\n    dispatch({\r\n      type: GET_TOPIC,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    // return to dashboard if invalid id is given\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\n// API Call\r\n// Delete a topic\r\nexport const deleteTopic = (id) => async (dispatch) => {\r\n  // pops up confirm delete box\r\n  if (\r\n    window.confirm(`Please confirm that you want to delete this topic: ${id}`)\r\n  ) {\r\n    await axios.delete(`/api/topic/${id}`);\r\n    dispatch({\r\n      type: DELETE_TOPIC,\r\n      payload: id, // pass to payload at topicReducer.js\r\n    });\r\n  }\r\n};\r\n","// type of actions here. Redux\r\n\r\n// handle TOPIC actions\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_TOPICS = \"GET_TOPICS\";\r\nexport const GET_TOPIC = \"GET_TOPIC\";\r\nexport const DELETE_TOPIC = \"DELETE_TOPIC\";\r\n\r\n// handle backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_QUESTION = \"GET_QUESTION\";\r\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\r\n\r\n// handle users\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTopic } from \"../../actions/topicActions\";\r\n\r\nclass TopicItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteTopic(id);\r\n  };\r\n\r\n  render() {\r\n    const { topic } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{topic.topicIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h5>{topic.topicName}</h5>\r\n              <p>{topic.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/topicBoard/${topic.topicIdentifier}`}>\r\n                  <li className=\"list-group-item board py-1\">\r\n                    <i className=\"fas fa-book-open\"> Look At Questions</i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateTopic/${topic.topicIdentifier}`}>\r\n                  <li className=\"list-group-item update py-1\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Topic</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete py-1\"\r\n                  onClick={this.onDeleteClick.bind(this, topic.topicIdentifier)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Topic</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopicItem.propTypes = {\r\n  deleteTopic: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTopic })(TopicItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateTopicButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-md-4\">\r\n        <Link to=\"/addTopic\" className=\"btn btn-sm btn-info\">\r\n          <i className=\"fas fa-plus-circle\"> Add a Topic</i>\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateTopicButton;\r\n","import React, { Component } from \"react\";\r\nimport TopicItem from \"./Topic/TopicItem\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CreateTopicButton from \"./Topic/CreateTopicButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTopics } from \"../actions/topicActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  // live cycle hook\r\n  componentDidMount() {\r\n    this.props.getTopics();\r\n  }\r\n\r\n  render() {\r\n    const { topics } = this.props.topic;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h3 className=\"display-4 text-center\">\r\n                Data Structure or Algorithms Topics\r\n              </h3>\r\n\r\n              <CreateTopicButton />\r\n\r\n              <hr />\r\n              {topics.map((topic) => (\r\n                <TopicItem key={topic.id} topic={topic} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  topic: PropTypes.object.isRequired,\r\n  getTopics: PropTypes.func.isRequired,\r\n};\r\n\r\n// this generates props\r\nconst mapStateToProps = (state) => ({\r\n  // From index.js at reducers\r\n  topic: state.topic, // props with name \"topic\"\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTopics })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\n// save token to \"Authorization\" in the header(postman)\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { SET_CURRENT_USER, GET_ERRORS } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Register new user\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    // from post API(Controller Class)\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n\r\n    // reset errors. Stop from recurring display\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// login\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // from post API(Controller Class)\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract the token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header*** Like header in Postman\r\n    setJWTToken(token);\r\n    // decode the token in React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to securityReducer.js\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// logout\r\nexport const logout = () => (dispatch) => {\r\n  // remove the token at the local storage. \"jwtToken\" was defined in login func above\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  // set validToken to false. Remove from header\r\n  setJWTToken(false);\r\n\r\n  // dispatch to securityReducer.js\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    // reset payload if successful\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityAction\";\r\nimport \"../../App.css\";\r\n\r\nclass Header extends Component {\r\n  // props.logout(). This function is from securityAction.js\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    // Redux state\r\n    const { validToken, user } = this.props.security;\r\n\r\n    // Case: user is authenticated\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Study Topics\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    // Case: user is not authenticated\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      //NavBar Component Code\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <i className=\"fa fa-flag-checkered pr-1\">\r\n              {\" \"}\r\n              Leetcode Progress Tracker\r\n            </i>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {\r\n            // headerLinks go here\r\n          }\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux state\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTopic } from \"../../actions/topicActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddTopic extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Initial State\r\n    this.state = {\r\n      topicName: \"\",\r\n      topicIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // new topic object\r\n    const newTopic = {\r\n      topicName: this.state.topicName,\r\n      topicIdentifier: this.state.topicIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createTopic(newTopic, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"register\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Create New LeetCode Topic\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.topicName,\r\n                      })}\r\n                      placeholder=\"Topic: Linked List, Array, etc.\"\r\n                      name=\"topicName\"\r\n                      value={this.state.topicName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.topicName && (\r\n                      <div className=\"invalid-feedback\">{errors.topicName}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.topicIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Abbreviation\"\r\n                      name=\"topicIdentifier\"\r\n                      value={this.state.topicIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.topicIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.topicIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"General Time and Space Complexity for this topic to pass interview\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Est. End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Set this class props\r\nAddTopic.propTypes = {\r\n  createTopic: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State.errors\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createTopic })(AddTopic);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_TOPICS, GET_TOPIC, DELETE_TOPIC } from \"../actions/types\";\r\n\r\n// reducer must have an initial state\r\nconst initialState = {\r\n  topics: [],\r\n  topic: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TOPICS:\r\n      return {\r\n        ...state,\r\n        topics: action.payload,\r\n      };\r\n\r\n    case GET_TOPIC:\r\n      return {\r\n        ...state,\r\n        topic: action.payload,\r\n      };\r\n\r\n    case DELETE_TOPIC:\r\n      return {\r\n        ...state,\r\n        topics: state.topics.filter(\r\n          (topic) => topic.topicIdentifier !== action.payload\r\n          // delete without refreshing page\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_QUESTION,\r\n  DELETE_QUESTION,\r\n  DELETE_TOPIC,\r\n} from \"../actions/types\";\r\n\r\n// reducer must have an initial state\r\nconst initialState = {\r\n  questions: [],\r\n  question: {},\r\n};\r\n\r\n// pass actions from this reducer\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n      };\r\n\r\n    case GET_QUESTION:\r\n      return {\r\n        ...state,\r\n        question: action.payload,\r\n      };\r\n\r\n    case DELETE_QUESTION:\r\n      return {\r\n        ...state,\r\n        // delete without refreshing page!!!!!!!!\r\n        questions: state.questions.filter(\r\n          (question) => question.topicSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\n// reducer must have an initial state\r\nconst initialState = {\r\n  user: {},\r\n  // empty user doens't have a valide token\r\n  validToken: false,\r\n};\r\n\r\n// set validToken to be true if we have a payload\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// pass actions from this reducer\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload), // true/false\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport topicReducer from \"./topicReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\n// these reducers are the state that shown up in Redux.state\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  topic: topicReducer, // from topicReducer\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n// object\r\nconst initialState = {};\r\n// array\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getTopic, createTopic } from \"../../actions/topicActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateTopic extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Initial State\r\n    this.state = {\r\n      id: \"\",\r\n      topicName: \"\",\r\n      topicIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks. Load the received props\r\n  componentWillReceiveProps(nextProps) {\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    // ReactDevTools/UpdateProject/Props/Topic. ES6 Destructure topic props\r\n    const {\r\n      id,\r\n      topicName,\r\n      topicIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.topic;\r\n\r\n    // this.setState helps displaying existing props data\r\n    this.setState({\r\n      id,\r\n      topicName,\r\n      topicIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // get the topic identifier. Check from React/Componments/Match\r\n    const { id } = this.props.match.params;\r\n    // from API topicActions.js\r\n    this.props.getTopic(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // new topic object\r\n    const updateTopic = {\r\n      id: this.state.id,\r\n      topicName: this.state.topicName,\r\n      topicIdentifier: this.state.topicIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createTopic(updateTopic, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Edit Leetcode Topic</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.topicName,\r\n                    })}\r\n                    placeholder=\"Leetcode Topic\"\r\n                    name=\"topicName\"\r\n                    value={this.state.topicName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.topicName && (\r\n                    <div className=\"invalid-feedback\">{errors.topicName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.topicIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Topic ID\"\r\n                    name=\"topicIdentifier\"\r\n                    value={this.state.topicIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.topicIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.topicIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Topic General Time and Space Complexity\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateTopic.propTypes = {\r\n  getTopic: PropTypes.func.isRequired,\r\n  topic: PropTypes.object.isRequired,\r\n  createTopic: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // From index.js(Reducer)/topicReducer.js\r\n  topic: state.topic.topic,\r\n  // get errors\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTopic, createTopic })(UpdateTopic);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteQuestion } from \"../../../actions/backlogActions\";\r\n\r\n// This class is the child of Backlog.js\r\nclass Question extends Component {\r\n  onDeleteClick(backlog_id, q_id) {\r\n    this.props.deleteQuestion(backlog_id, q_id);\r\n  }\r\n\r\n  render() {\r\n    const { question } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (question.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n    if (question.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    if (question.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {question.topicSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{question.summary}</h5>\r\n          <p className=\"card-text text-truncate \">{question.note}</p>\r\n          <span class=\"float-right\">\r\n            <Link\r\n              to={`/updateQuestion/${question.topicIdentifier}/${question.topicSequence}`}\r\n              className=\"btn btn-primary btn-sm\"\r\n            >\r\n              Update\r\n            </Link>\r\n\r\n            <button\r\n              className=\"btn btn-secondary ml-4 btn-sm\"\r\n              onClick={this.onDeleteClick.bind(\r\n                this,\r\n                question.topicIdentifier,\r\n                question.topicSequence\r\n              )}\r\n            >\r\n              Delete\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuestion.propTypes = {\r\n  deleteQuestion: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteQuestion })(Question);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_BACKLOG,\r\n  GET_QUESTION,\r\n  DELETE_QUESTION,\r\n  GET_ERRORS,\r\n} from \"./types\";\r\n\r\n// Add a question API call\r\nexport const addQuestion = (backlog_id, question, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    // from post question API(Controller Class)\r\n    await axios.post(`/api/backlog/${backlog_id}`, question);\r\n    history.push(`/topicBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      // reset errors. Stop from recurring display\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// Get all questions for a topic API call\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data, // pass to payload at backlogReducer.js\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// API Call\r\n// history is for when we get errors, we need to redirect back to topicBoard\r\nexport const getQuestion = (backlog_id, q_id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${q_id}`);\r\n    dispatch({\r\n      type: GET_QUESTION,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    // return to dashboard if invalid id is given\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\n// Update a question\r\nexport const updateQuestion = (backlog_id, q_id, question, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    // patch to this API call\r\n    await axios.patch(`/api/backlog/${backlog_id}/${q_id}`, question);\r\n\r\n    // direct back to this topicBoard page\r\n    history.push(`/topicBoard/${backlog_id}`);\r\n\r\n    // reset errors\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// API Call\r\n// Delete a question\r\nexport const deleteQuestion = (backlog_id, q_id) => async (dispatch) => {\r\n  // pops up confirm delete box\r\n  if (\r\n    window.confirm(\r\n      `Please confirm that you want to delete this question: ${q_id}`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${q_id}`);\r\n    dispatch({\r\n      type: DELETE_QUESTION,\r\n      payload: q_id, // pass to payload at backlogReducer.js\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Question from \"./Questions/Question\";\r\n\r\n// child class of TopicBoard.js\r\nclass Backlog extends Component {\r\n  render() {\r\n    // Get questions.prop from TopicBoard.js\r\n    const { questions_prop } = this.props;\r\n    // qs is a array\r\n    const qs = questions_prop.map((question) => (\r\n      <Question key={question.id} question={question} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < qs.length; i++) {\r\n      if (qs[i].props.question.status === \"TO_DO\") {\r\n        todoItems.push(qs[i]);\r\n      } else if (qs[i].props.question.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(qs[i]);\r\n      } else if (qs[i].props.question.status === \"DONE\") {\r\n        doneItems.push(qs[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h4>TO DO</h4>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h4>WORKING ON IT</h4>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h4>DONE</h4>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass TopicBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  // live cycle hook\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // get to topic identifier\r\n    const { id } = this.props.match.params;\r\n    // match the state from Redux\r\n    const { questions } = this.props.backlog;\r\n    // get errors\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, questions) => {\r\n      if (questions.length < 1) {\r\n        if (errors.topicNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.topicNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.topicIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.topicIdentifier}\r\n            </div>\r\n          );\r\n        }\r\n        {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              No Question Created Under This Topic\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog questions_prop={questions} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, questions);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col-md-4\">\r\n          <Link to={`/addQuestion/${id}`} className=\"btn btn-info btn-sm mb-3\">\r\n            <i className=\"fas fa-plus-circle\"> Add a Question</i>\r\n          </Link>\r\n        </div>\r\n\r\n        <hr />\r\n        {\r\n          // backlog starts here\r\n          BoardContent\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopicBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// this generates props\r\nconst mapStateToProps = (state) => ({\r\n  // From index.js at reducers\r\n  backlog: state.backlog, // props with name \"backlog\"\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(TopicBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuestion } from \"../../../actions/backlogActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    // Initial State\r\n    this.state = {\r\n      summary: \"\",\r\n      note: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      topicIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // new question object\r\n    const newQuestion = {\r\n      summary: this.state.summary,\r\n      note: this.state.note,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    // pass props to the addQuestion Function at backlogActions.js\r\n    this.props.addQuestion(\r\n      this.state.topicIdentifier,\r\n      newQuestion,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/topicBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Topic Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add a Question</h4>\r\n              <p className=\"lead text-center\">Topic: {id}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Question No: Question Content\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.note,\r\n                    })}\r\n                    placeholder=\"Notes\"\r\n                    name=\"note\"\r\n                    value={this.state.note}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.note && (\r\n                    <div className=\"invalid-feedback\">{errors.note}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Set this class props\r\nAddQuestion.propTypes = {\r\n  addQuestion: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State.errors\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addQuestion })(AddQuestion);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getQuestion, updateQuestion } from \"../../../actions/backlogActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateQuestion extends Component {\r\n  // this function is used to get the state at Redux\r\n  componentDidMount() {\r\n    const { backlog_id, q_id } = this.props.match.params;\r\n    this.props.getQuestion(backlog_id, q_id, this.props.history);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // Initial State\r\n    this.state = {\r\n      id: \"\",\r\n      topicSequence: \"\",\r\n      summary: \"\",\r\n      note: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      topicIdentifier: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // life cycle hooks. Load the received props\r\n  componentWillReceiveProps(nextProps) {\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    // ReactDevTools/UpdateQuestion/Props/question. ES6 Destructure question props\r\n    const {\r\n      id,\r\n      topicSequence,\r\n      summary,\r\n      note,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      topicIdentifier,\r\n    } = nextProps.question;\r\n\r\n    // this.setState helps displaying existing props data\r\n    this.setState({\r\n      id,\r\n      topicSequence,\r\n      summary,\r\n      note,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      topicIdentifier,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // new topic object\r\n    const updateQuestion = {\r\n      id: this.state.id,\r\n      topicSequence: this.state.topicSequence,\r\n      summary: this.state.summary,\r\n      note: this.state.note,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      topicIdentifier: this.state.topicIdentifier,\r\n    };\r\n    this.props.updateQuestion(\r\n      this.state.topicIdentifier,\r\n      this.state.topicSequence,\r\n      updateQuestion, // from onSubmit. Just above\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/topicBoard/${this.state.topicIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Topic Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Question</h4>\r\n              <p className=\"lead text-center\">\r\n                Topic: {this.state.topicIdentifier} Question Code:{\" \"}\r\n                {this.state.topicSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Question No. and its title\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"note\"\r\n                    value={this.state.note}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateQuestion.propTypes = {\r\n  getQuestion: PropTypes.func.isRequired,\r\n  updateQuestion: PropTypes.func.isRequired,\r\n  question: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // From index.js(Reducer)/backlogReducer.js\r\n  question: state.backlog.question,\r\n  // get errors\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestion, updateQuestion })(\r\n  UpdateQuestion\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  // Don't show to ask user to login or register again when they already login\r\n  // life cycle hook\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Leetcode Progress Tracker</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to start tracking your Leetcoding progress\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Set this class props\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"../../actions/securityAction\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Initial State\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // Don't show to ask user to login or register again when they already login\r\n  // life cycle hook\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // new user object\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    // pass props to the createNewUser Function at securityActions.js\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Your full name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Please use your email as the username\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.userame}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Set this class props\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityAction\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // Initial State\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // Don't show to ask user to login or register again when they already login\r\n  // life cycle hook\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  // this method takes the valid token to load the user's dashboard\r\n  // life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    // if validToken is true, send this token to the dashboard\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    // if errors\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    // prevent the form from refreshing\r\n    e.preventDefault();\r\n\r\n    // user object\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    // pass props to the login Function at securityActions.js\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  render() {\r\n    // extract the errors from Redux\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"username(your email address)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Set this class props\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* Pass all the props if validToken is true; else, return to login */\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\n// Set this class props\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\n// map to Redux State\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css.map\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddTopic from \"./components/Topic/AddTopic\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateTopic from \"./components/Topic/UpdateTopic\";\r\nimport TopicBoard from \"./components/TopicBoard/TopicBoard\";\r\nimport AddQuestion from \"./components/TopicBoard/Questions/AddQuestion\";\r\nimport UpdateQuestion from \"./components/TopicBoard/Questions/UpdateQuestion\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityAction\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\n// everytime refreshes of page, token is gone.\r\n// Set token here prevent this problem\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  // set token\r\n  setJWTToken(jwtToken);\r\n  // decode token\r\n  const decoded_token = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_token,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  // if time for token is expired\r\n  if (decoded_token.exp < currentTime) {\r\n    // handle logout needed\r\n    store.dispatch(logout());\r\n    // send user back to the main page\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              // Public routes\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              // Below are all private routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addTopic\" component={AddTopic} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateTopic/:id\"\r\n                component={UpdateTopic}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/topicBoard/:id\"\r\n                component={TopicBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addQuestion/:id\"\r\n                component={AddQuestion}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateQuestion/:backlog_id/:q_id\"\r\n                component={UpdateQuestion}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}